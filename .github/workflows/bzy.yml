name: bzy

permissions:
  contents: write  # 允许写入权限

on:
  workflow_dispatch:  # 允许手动触发工作流
  schedule:
    # 设置定时任务，每天凌晨02：30执行一次
        - cron: '30 18 * * *'

jobs:
  fetch-and-store:
    runs-on: ubuntu-latest

    steps:
    # 步骤 1: 检出仓库内容
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 获取完整的Git历史

    # 步骤 2: 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    # 步骤 3: 安装依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests  # 安装 requests 库

    # 步骤 4: 创建数据文件夹
    - name: Create data directory if it doesn't exist
      run: |
        mkdir -p data  # 创建 data 目录，防止 GitHub 中没有该目录

    # 步骤 5: 执行 Python 脚本
    - name: Run Python script
      run: |
        python bzy.py  # 执行脚本，确保脚本将结果保存在 data/cm3.txt 文件

    # 步骤 6: 检查文件更改
    - name: Check for changes before commit
      run: |
        git status
        git diff

    # 步骤 7: 提交并推送更改
    - name: Commit and push changes to main
      run: |
        git config --local user.email "1139523599@qq.com"
        git config --local user.name "eliangwww"
        git add data/bzy.txt  # 将 cm3.txt 文件添加到 Git 缓存
        git commit -m "Update IPDB data file" || echo "No changes to commit"  # 如果没有更改则跳过提交
        git pull origin main --rebase || git rebase --abort  # 拉取主分支最新内容
        git push origin main  # 推送更改到远程主分支

    # 步骤 8: 清理工作目录
    - name: Clean up working directory
      run: |
        git checkout main  # 返回主分支
